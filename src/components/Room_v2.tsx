/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 ./public/models/room_v2.glb --transform -t --shadows --keepnames
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    board_01_high_rsMaterial1_0: THREE.Mesh
    board_02_low1_rsMaterial1_0: THREE.Mesh
    board_02_low2_rsMaterial1_0: THREE.Mesh
    board_03_high_rsMaterial1_0: THREE.Mesh
    board_03_high1_rsMaterial1_0: THREE.Mesh
    board_03_high2_rsMaterial1_0: THREE.Mesh
    board_03_high3_rsMaterial1_0: THREE.Mesh
    board_04_high_rsMaterial1_0: THREE.Mesh
    board_04_high1_rsMaterial1_0: THREE.Mesh
    board_04_high2_rsMaterial1_0: THREE.Mesh
    board_04_high3_rsMaterial1_0: THREE.Mesh
    Poster: THREE.Mesh
    Mat: THREE.Mesh
    Bin: THREE.Mesh
    Chair: THREE.Mesh
    Keyboard: THREE.Mesh
    PC: THREE.Mesh
    Mouse: THREE.Mesh
    Speakers: THREE.Mesh
    Shelf: THREE.Mesh
    Bed: THREE.Mesh
    Briefcases: THREE.Mesh
    Briefcase: THREE.Mesh
    Closet: THREE.Mesh
    Scale: THREE.Mesh
    Desk: THREE.Mesh
    Filmposter: THREE.Mesh
    Low_poly_living_room: THREE.Mesh
    Wall001: THREE.Mesh
    Wall002: THREE.Mesh
    Wall003: THREE.Mesh
    Screen: THREE.Mesh
    Screen_inner: THREE.Mesh
  }
  materials: {
    rsMaterial1: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    lambert73: THREE.MeshStandardMaterial
  }
}

export function Room(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('models/room_v2-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Skateboard" position={[102.93, 140.83, -151.45]} rotation={[-0.01, 0.01, 0.14]}>
        <mesh name="board_01_high_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_01_high_rsMaterial1_0.geometry} material={materials.rsMaterial1} />
        <mesh name="board_02_low1_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_02_low1_rsMaterial1_0.geometry} material={materials['Material.005']} position={[-2.54, 0, 0]} />
        <mesh name="board_02_low2_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_02_low2_rsMaterial1_0.geometry} material={materials['Material.005']} position={[2.54, 0, 0]} rotation={[Math.PI, 0, 0]} scale={-1} />
        <mesh name="board_03_high_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_03_high_rsMaterial1_0.geometry} material={materials.rsMaterial1} position={[-2.54, 0, 0]} />
        <mesh name="board_03_high1_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_03_high1_rsMaterial1_0.geometry} material={materials.rsMaterial1} position={[2.54, 0, 0]} rotation={[Math.PI, 0, 0]} scale={-1} />
        <mesh name="board_03_high2_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_03_high2_rsMaterial1_0.geometry} material={materials.rsMaterial1} position={[2.54, 0, 0]} rotation={[-Math.PI, 0, -Math.PI]} />
        <mesh name="board_03_high3_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_03_high3_rsMaterial1_0.geometry} material={materials.rsMaterial1} position={[-2.54, 0, 0]} rotation={[0, 0, Math.PI]} scale={-1} />
        <mesh name="board_04_high_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_04_high_rsMaterial1_0.geometry} material={materials.rsMaterial1} position={[-2.54, 0, 0]} />
        <mesh name="board_04_high1_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_04_high1_rsMaterial1_0.geometry} material={materials.rsMaterial1} position={[2.54, 0, 0]} rotation={[Math.PI, 0, 0]} scale={-1} />
        <mesh name="board_04_high2_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_04_high2_rsMaterial1_0.geometry} material={materials.rsMaterial1} position={[2.54, 0, 0]} rotation={[-Math.PI, 0, -Math.PI]} />
        <mesh name="board_04_high3_rsMaterial1_0" castShadow receiveShadow geometry={nodes.board_04_high3_rsMaterial1_0.geometry} material={materials.rsMaterial1} position={[-2.54, 0, 0]} rotation={[0, 0, Math.PI]} scale={-1} />
      </group>
      <mesh name="Poster" castShadow receiveShadow geometry={nodes.Poster.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Mat" castShadow receiveShadow geometry={nodes.Mat.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Bin" castShadow receiveShadow geometry={nodes.Bin.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Chair" castShadow receiveShadow geometry={nodes.Chair.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Keyboard" castShadow receiveShadow geometry={nodes.Keyboard.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="PC" castShadow receiveShadow geometry={nodes.PC.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Mouse" castShadow receiveShadow geometry={nodes.Mouse.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Speakers" castShadow receiveShadow geometry={nodes.Speakers.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Shelf" castShadow receiveShadow geometry={nodes.Shelf.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Bed" castShadow receiveShadow geometry={nodes.Bed.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Briefcases" castShadow receiveShadow geometry={nodes.Briefcases.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Briefcase" castShadow receiveShadow geometry={nodes.Briefcase.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Closet" castShadow receiveShadow geometry={nodes.Closet.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Scale" castShadow receiveShadow geometry={nodes.Scale.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Desk" castShadow receiveShadow geometry={nodes.Desk.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Filmposter" castShadow receiveShadow geometry={nodes.Filmposter.geometry} material={materials.lambert73} position={[-9.42, 159.37, 193.84]} rotation={[0, 0.04, Math.PI / 2]} scale={[-49.53, -32.17, -58.04]} />
      <mesh name="Low_poly_living_room" castShadow receiveShadow geometry={nodes.Low_poly_living_room.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Wall001" castShadow receiveShadow geometry={nodes.Wall001.geometry} material={materials['Material.001']} position={[201.77, 129.05, 75]} rotation={[-Math.PI / 2, 0, -Math.PI / 2]} scale={[108, 100, 100.11]} />
      <mesh name="Wall002" castShadow receiveShadow geometry={nodes.Wall002.geometry} material={materials['Material.001']} position={[77.92, 130.95, -185.62]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      <mesh name="Wall003" castShadow receiveShadow geometry={nodes.Wall003.geometry} material={materials['Material.001']} position={[0, 0, 10]} rotation={[Math.PI / 2, 0, -Math.PI]} scale={-100} />
      <group name="Screen">
        <mesh name="Screen_outer" castShadow receiveShadow geometry={nodes.Screen.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100}/>
        <mesh name="Screen_inner" castShadow receiveShadow geometry={nodes.Screen_inner.geometry} material={materials['Material.001']} rotation={[-Math.PI / 2, 0, 0]} scale={100}/>
      </group>
    </group>
  )
}

useGLTF.preload('/room_v2-transformed.glb')
